(()=>{"use strict";const t=new class{constructor(){this.initialized=!1,this.readabilityLoaded=!1}async init(){if(!this.initialized)try{this.readabilityLoaded||await this.loadReadabilityLibrary(),this.initialized=!0}catch(t){throw console.error("Error initializing ContentExtractor:",t),t}}async loadReadabilityLibrary(){this.readabilityLoaded=!0}extractContent(t,e={}){const n=e.mode||"full",r=e.format||"markdown",o=!1!==e.autoCleanup,a=!1!==e.includeMetadata;let i="",s=t.title,c={};switch(n){case"full":const e=this.extractFullPageContent(t,o);i=e.content,c=e.metadata;break;case"selection":const n=window.getSelection();if(!n||!n.toString().trim())throw new Error("No text selected");i=n.toString();break;case"custom":i=t.body.innerText}if(a){c={...c,title:s,url:t.location.href,domain:t.location.hostname,extractedAt:(new Date).toISOString()};const e=this.extractAuthor(t);e&&(c.author=e);const n=this.extractPublishDate(t);n&&(c.publishDate=n)}return{content:this.formatContent(i,r,c),metadata:c,format:r,mode:n}}extractFullPageContent(t,e=!0){const n=t.cloneNode(!0);e&&this.cleanupDocument(n);const r=n.querySelector("main")||n.querySelector("article")||n.querySelector(".content")||n.querySelector("#content");let o="";o=r?r.innerText:n.body.innerText;const a=this.countWords(o);return{content:o,metadata:{wordCount:a,readingTime:Math.ceil(a/200)}}}cleanupDocument(t){["header","footer","nav","aside",".ads",".advertisement",".sidebar",".comments",".related",".recommended","script","style","noscript","iframe"].forEach((e=>{t.querySelectorAll(e).forEach((t=>{t.parentNode&&t.parentNode.removeChild(t)}))}))}extractAuthor(t){const e=t.querySelector('meta[name="author"]')||t.querySelector('meta[property="article:author"]')||t.querySelector('meta[property="og:author"]');if(e)return e.getAttribute("content");const n=t.querySelector(".author")||t.querySelector(".byline")||t.querySelector('[rel="author"]');return n?n.textContent.trim():null}extractPublishDate(t){const e=t.querySelector('meta[name="date"]')||t.querySelector('meta[property="article:published_time"]')||t.querySelector('meta[property="og:published_time"]');if(e)return e.getAttribute("content");const n=t.querySelector(".date")||t.querySelector(".published")||t.querySelector("time");return n?n.textContent.trim():null}formatContent(t,e,n={}){switch(e){case"markdown":return this.convertToMarkdown(t,n);case"json":return this.convertToJson(t,n);default:return t}}convertToMarkdown(t,e={}){let n="";return e.title&&(n+=`# ${e.title}\n\n`),Object.keys(e).length>0&&(n+="> ",e.author&&(n+=`Author: ${e.author} | `),e.publishDate&&(n+=`Published: ${e.publishDate} | `),e.url&&(n+=`Source: ${e.url} | `),e.extractedAt&&(n+=`Extracted: ${new Date(e.extractedAt).toLocaleString()} | `),e.readingTime&&(n+=`Reading time: ${e.readingTime} min | `),n=n.replace(/ \| $/,""),n+="\n\n"),n+=t,n}convertToJson(t,e={}){const n={content:t,...e};return JSON.stringify(n,null,2)}countWords(t){return t.trim().split(/\s+/).length}async saveExtraction(t){try{const e={id:this.generateUUID(),title:t.metadata.title||"Untitled Extraction",content:t.content,format:t.format,sourceUrl:t.metadata.url,sourceDomain:t.metadata.domain,extractionMode:t.mode,metadata:{...t.metadata,extractedAt:Date.now()},tags:[],folderId:null},n=(await chrome.storage.local.get("extractions")).extractions||[];return n.unshift(e),await chrome.storage.local.set({extractions:n}),e}catch(t){throw console.error("Error saving extraction:",t),t}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}};(new class{constructor(){this.isExtracting=!1,this.selectionMode=!1,this.customMode=!1,this.overlayActive=!1,this.currentExtraction=null,this.createOverlayElements()}init(){this.setupMessageListeners(),this.setupOverlayEventListeners(),console.log("Navis AI Content Script initialized")}createOverlayElements(){this.overlay=document.createElement("div"),this.overlay.id="navis-overlay",this.overlay.className="navis-overlay",this.overlay.style.display="none",this.extractionUI=document.createElement("div"),this.extractionUI.id="navis-extraction-ui",this.extractionUI.className="navis-extraction-ui",this.extractionUI.innerHTML='\n      <div class="navis-header">\n        <div class="navis-logo">\n          <span class="navis-icon">ðŸ§­</span>\n          <h2>Navis AI - Treasure Hunter</h2>\n        </div>\n        <button id="navis-close-btn" class="navis-close-btn">Ã—</button>\n      </div>\n      <div class="navis-content">\n        <div class="navis-preview">\n          <h3>Content Preview</h3>\n          <div id="navis-preview-content" class="navis-preview-content"></div>\n        </div>\n        <div class="navis-controls">\n          <div class="navis-control-group">\n            <label>Format:</label>\n            <div class="navis-button-group">\n              <button class="navis-format-btn active" data-format="markdown">Markdown</button>\n              <button class="navis-format-btn" data-format="json">JSON</button>\n              <button class="navis-format-btn" data-format="text">Plain Text</button>\n            </div>\n          </div>\n          <div class="navis-actions">\n            <button id="navis-save-btn" class="navis-save-btn">Save to Library</button>\n            <button id="navis-copy-btn" class="navis-copy-btn">Copy to Clipboard</button>\n          </div>\n        </div>\n      </div>\n    ',this.overlay.appendChild(this.extractionUI),document.body.appendChild(this.overlay)}setupMessageListeners(){chrome.runtime.onMessage.addListener(((t,e,n)=>{switch(console.log("Content script received message:",t),t.action){case"extractContent":return this.handleExtractContent(t.settings,n),!0;case"extractSelection":return this.handleExtractSelection(t.text,n),!0;case"saveAsPrompt":return this.handleSaveAsPrompt(t.text,n),!0}}))}setupOverlayEventListeners(){document.getElementById("navis-close-btn").addEventListener("click",(()=>{this.hideOverlay()})),document.getElementById("navis-save-btn").addEventListener("click",(()=>{this.saveExtraction()})),document.getElementById("navis-copy-btn").addEventListener("click",(()=>{this.copyToClipboard()}));const t=document.querySelectorAll(".navis-format-btn");t.forEach((e=>{e.addEventListener("click",(()=>{t.forEach((t=>t.classList.remove("active"))),e.classList.add("active"),this.updatePreview()}))}))}async handleExtractContent(e,n){try{if(this.isExtracting)return void n({success:!1,error:"Extraction already in progress"});this.isExtracting=!0,await t.init();const r=t.extractContent(document,e);this.currentExtraction=r,this.showOverlay(r.content),n({success:!0})}catch(t){console.error("Error extracting content:",t),this.isExtracting=!1,n({success:!1,error:t.message}),chrome.runtime.sendMessage({action:"extractionError",error:t.message})}}async handleExtractSelection(e,n){try{if(this.isExtracting)return void n({success:!1,error:"Extraction already in progress"});this.isExtracting=!0,await t.init();const r={content:e,metadata:{title:document.title,url:document.location.href,domain:document.location.hostname,extractedAt:(new Date).toISOString()},format:"markdown",mode:"selection"};r.content=t.formatContent(e,"markdown",r.metadata),this.currentExtraction=r,this.showOverlay(r.content),n({success:!0})}catch(t){console.error("Error extracting selection:",t),this.isExtracting=!1,n({success:!1,error:t.message})}}handleSaveAsPrompt(t,e){chrome.runtime.sendMessage({action:"openPromptEditor",content:t}),e({success:!0})}showOverlay(t){document.getElementById("navis-preview-content").textContent=t,this.overlay.style.display="flex",this.overlayActive=!0}hideOverlay(){this.overlay.style.display="none",this.overlayActive=!1,this.isExtracting=!1,this.currentExtraction=null}updatePreview(){if(!this.currentExtraction)return;const e=document.querySelector(".navis-format-btn.active"),n=e?e.getAttribute("data-format"):"markdown";this.currentExtraction.format=n;const r=t.formatContent(this.currentExtraction.content,n,this.currentExtraction.metadata);document.getElementById("navis-preview-content").textContent=r,this.currentExtraction.content=r}saveExtraction(){this.currentExtraction&&chrome.runtime.sendMessage({action:"extractionComplete",extraction:this.currentExtraction},(t=>{t&&t.success?(this.hideOverlay(),this.showNotification("Content saved to library")):this.showNotification("Error saving content",!0)}))}copyToClipboard(){if(!this.currentExtraction)return;const t=document.getElementById("navis-preview-content").textContent;navigator.clipboard.writeText(t).then((()=>{this.showNotification("Copied to clipboard")})).catch((t=>{console.error("Failed to copy: ",t),this.showNotification("Failed to copy to clipboard",!0)}))}showNotification(t,e=!1){const n=document.createElement("div");n.className="navis-notification "+(e?"error":"success"),n.textContent=t,document.body.appendChild(n),n.style.position="fixed",n.style.bottom="20px",n.style.right="20px",n.style.padding="10px 20px",n.style.borderRadius="4px",n.style.color="white",n.style.fontSize="14px",n.style.zIndex="10000",n.style.backgroundColor=e?"#e53e3e":"#2cb67d",setTimeout((()=>{n.remove()}),3e3)}}).init()})();