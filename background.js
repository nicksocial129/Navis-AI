(()=>{function e(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}function t(e){return e.trim().split(/\s+/).length}function o(e){const o=t(e);return Math.ceil(o/200)}chrome.runtime.onInstalled.addListener((async()=>{console.log("Navis AI Extension installed");const e={theme:{mode:"light",accentColor:"#05b2dc"},interface:{defaultView:"prompts",sidebarCollapsed:!1,showTutorials:!0},extraction:{defaultFormat:"markdown",defaultMode:"full",autoCleanup:!0,includeMetadata:!0}};chrome.contextMenus.create({id:"navis-extract-selection",title:"Extract with Navis AI",contexts:["selection"]}),chrome.contextMenus.create({id:"navis-save-prompt",title:"Save as Prompt",contexts:["selection"]});try{await chrome.storage.local.set({settings:e,prompts:[],extractions:[],folders:[]}),console.log("Storage initialized with default values")}catch(e){console.error("Error initializing storage:",e)}})),chrome.contextMenus.onClicked.addListener(((e,t)=>{"navis-extract-selection"===e.menuItemId?chrome.tabs.sendMessage(t.id,{action:"extractSelection",text:e.selectionText}):"navis-save-prompt"===e.menuItemId&&chrome.tabs.sendMessage(t.id,{action:"saveAsPrompt",text:e.selectionText})})),chrome.runtime.onMessage.addListener(((r,a,n)=>{switch(console.log("Background received message:",r),r.action){case"extractContent":return async function(e,t,o){try{const r=await chrome.storage.local.get("settings"),a=r.settings?.extraction||{defaultMode:"full",defaultFormat:"markdown",autoCleanup:!0,includeMetadata:!0},n={mode:e.mode||a.defaultMode,format:e.format||a.defaultFormat,autoCleanup:a.autoCleanup,includeMetadata:a.includeMetadata};chrome.tabs.sendMessage(t.id,{action:"extractContent",settings:n},(e=>{chrome.runtime.lastError?(console.error("Error sending message to content script:",chrome.runtime.lastError),o({success:!1,error:chrome.runtime.lastError.message})):o(e)}))}catch(e){console.error("Error handling content extraction:",e),o({success:!1,error:e.message})}}(r,a.tab,n),!0;case"extractionComplete":return async function(r,a){try{const n={id:e(),title:r.metadata.title||"Untitled Extraction",content:r.content,format:r.format,sourceUrl:r.metadata.url,sourceDomain:r.metadata.domain,extractionMode:r.mode,metadata:{...r.metadata,extractedAt:Date.now(),wordCount:t(r.content),readingTime:o(r.content)},tags:[],folderId:null},s=(await chrome.storage.local.get("extractions")).extractions||[];s.unshift(n),await chrome.storage.local.set({extractions:s}),a({success:!0,extraction:n})}catch(e){console.error("Error handling extraction completion:",e),a({success:!1,error:e.message})}}(r.extraction,n),!0;case"extractionError":return function(e,t){console.error("Extraction error:",e),t({success:!1,error:e})}(r.error,n),!0;case"savePrompt":return async function(t,o){try{const r={id:e(),title:t.title,content:t.content,category:t.category||"General",tags:t.tags||[],isTemplate:t.isTemplate||!1,templateVariables:t.templateVariables||[],createdAt:Date.now(),updatedAt:Date.now(),folderId:t.folderId||null},a=(await chrome.storage.local.get("prompts")).prompts||[];a.unshift(r),await chrome.storage.local.set({prompts:a}),o({success:!0,prompt:r})}catch(e){console.error("Error handling save prompt:",e),o({success:!1,error:e.message})}}(r,n),!0;case"openPromptEditor":return function(e,t){chrome.runtime.openOptionsPage((()=>{t({success:!0})}))}(0,n),!0;case"getStorageInfo":return async function(e){try{const t=await chrome.storage.local.getBytesInUse(null),o=chrome.storage.local.QUOTA_BYTES;e({success:!0,bytesInUse:t,quotaBytes:o,percentUsed:Math.round(t/o*100)})}catch(t){console.error("Error getting storage info:",t),e({success:!1,error:t.message})}}(n),!0}}))})();