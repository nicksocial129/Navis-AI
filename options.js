(()=>{"use strict";const t=new class{constructor(){this.initialized=!1}async init(){if(!this.initialized)try{(await chrome.storage.local.get("prompts")).prompts||await chrome.storage.local.set({prompts:[]}),this.initialized=!0}catch(t){throw console.error("Error initializing PromptManager:",t),t}}async getAllPrompts(){await this.init();try{return(await chrome.storage.local.get("prompts")).prompts||[]}catch(t){throw console.error("Error getting prompts:",t),t}}async getPromptById(t){await this.init();try{return(await this.getAllPrompts()).find((e=>e.id===t))||null}catch(t){throw console.error("Error getting prompt by ID:",t),t}}async createPrompt(t){await this.init();try{if(!t.title||!t.content)throw new Error("Title and content are required");const e=await this.getAllPrompts(),o={id:this.generateUUID(),title:t.title,content:t.content,category:t.category||"General",tags:t.tags||[],isTemplate:t.isTemplate||!1,templateVariables:t.templateVariables||[],createdAt:Date.now(),updatedAt:Date.now(),folderId:t.folderId||null};return e.unshift(o),await chrome.storage.local.set({prompts:e}),o}catch(t){throw console.error("Error creating prompt:",t),t}}async updatePrompt(t,e){await this.init();try{const o=await this.getAllPrompts(),r=o.findIndex((e=>e.id===t));return-1===r?null:(o[r]={...o[r],...e,updatedAt:Date.now()},await chrome.storage.local.set({prompts:o}),o[r])}catch(t){throw console.error("Error updating prompt:",t),t}}async deletePrompt(t){await this.init();try{const e=await this.getAllPrompts(),o=e.filter((e=>e.id!==t));return o.length!==e.length&&(await chrome.storage.local.set({prompts:o}),!0)}catch(t){throw console.error("Error deleting prompt:",t),t}}async searchPrompts(t,e={}){await this.init();try{const o=await this.getAllPrompts(),r=t.toLowerCase();return o.filter((t=>{const o=""===r||t.title.toLowerCase().includes(r)||t.content.toLowerCase().includes(r)||t.tags.some((t=>t.toLowerCase().includes(r))),a=!e.category||t.category===e.category,i=!e.folderId||t.folderId===e.folderId,n=void 0===e.isTemplate||t.isTemplate===e.isTemplate;return o&&a&&i&&n}))}catch(t){throw console.error("Error searching prompts:",t),t}}async getCategories(){await this.init();try{const t=await this.getAllPrompts(),e=new Set(t.map((t=>t.category)));return Array.from(e)}catch(t){throw console.error("Error getting categories:",t),t}}async getTags(){await this.init();try{const t=await this.getAllPrompts(),e=new Set;return t.forEach((t=>{t.tags.forEach((t=>e.add(t)))})),Array.from(e)}catch(t){throw console.error("Error getting tags:",t),t}}async processTemplate(t,e){await this.init();try{const o=await this.getPromptById(t);if(!o)throw new Error("Template prompt not found");if(!o.isTemplate)throw new Error("Prompt is not a template");let r=o.content;for(const[t,o]of Object.entries(e)){const e=new RegExp(`{{${t}}}`,"g");r=r.replace(e,o)}return r}catch(t){throw console.error("Error processing template:",t),t}}async exportPrompts(t=[]){await this.init();try{let e=await this.getAllPrompts();return t.length>0&&(e=e.filter((e=>t.includes(e.id)))),JSON.stringify(e,null,2)}catch(t){throw console.error("Error exporting prompts:",t),t}}async importPrompts(t){await this.init();try{const e=JSON.parse(t);if(!Array.isArray(e))throw new Error("Invalid import format");const o=await this.getAllPrompts(),r=e.map((t=>({id:this.generateUUID(),title:t.title||"Untitled Prompt",content:t.content||"",category:t.category||"General",tags:Array.isArray(t.tags)?t.tags:[],isTemplate:Boolean(t.isTemplate),templateVariables:Array.isArray(t.templateVariables)?t.templateVariables:[],createdAt:Date.now(),updatedAt:Date.now(),folderId:null}))),a=[...r,...o];return await chrome.storage.local.set({prompts:a}),r}catch(t){throw console.error("Error importing prompts:",t),t}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}},e=new class{constructor(){this.currentPromptId=null,this.initialized=!1}async init(){if(!this.initialized)try{await t.init(),this.setupEventListeners(),await this.loadPrompts(),await this.loadCategories(),this.initialized=!0,console.log("Prompt Vault initialized")}catch(t){console.error("Error initializing Prompt Vault:",t)}}setupEventListeners(){const t=document.getElementById("new-prompt");t&&t.addEventListener("click",(()=>this.openPromptEditor()));const e=document.getElementById("new-prompt");e&&e.addEventListener("click",(()=>this.openPromptEditor()));const o=document.getElementById("import-prompts");o&&o.addEventListener("click",(()=>this.importPrompts()));const r=document.getElementById("export-prompts");r&&r.addEventListener("click",(()=>this.exportPrompts()));const a=document.getElementById("prompt-search");a&&a.addEventListener("input",(()=>this.filterPrompts()));const i=document.getElementById("prompt-category-filter");i&&i.addEventListener("change",(()=>this.filterPrompts())),this.setupModalEventListeners()}setupModalEventListeners(){const t=document.querySelector(".close-modal");t&&t.addEventListener("click",(()=>this.closePromptEditor()));const e=document.getElementById("cancel-prompt");e&&e.addEventListener("click",(()=>this.closePromptEditor()));const o=document.getElementById("save-prompt");o&&o.addEventListener("click",(()=>this.savePrompt()));const r=document.getElementById("prompt-is-template");r&&r.addEventListener("change",(()=>{const t=document.querySelector(".template-variables");r.checked?t.style.display="block":t.style.display="none"}))}async loadPrompts(){try{const e=await t.getAllPrompts();this.updatePromptList(e)}catch(t){console.error("Error loading prompts:",t),this.showNotification("Failed to load prompts",!0)}}async loadCategories(){try{const e=await t.getCategories();this.updateCategoryFilter(e)}catch(t){console.error("Error loading categories:",t)}}updatePromptList(t){const e=document.querySelector(".prompt-list");e&&(t.length>0?(e.innerHTML="",t.forEach((t=>{const o=document.createElement("div");o.className="prompt-item",o.innerHTML=`\n          <h3>${this.escapeHtml(t.title)}</h3>\n          <p class="prompt-category">${this.escapeHtml(t.category)}</p>\n          <div class="prompt-tags">\n            ${t.tags.map((t=>`<span class="tag">${this.escapeHtml(t)}</span>`)).join("")}\n          </div>\n          <div class="prompt-actions">\n            <button class="icon-btn copy-btn" data-id="${t.id}" title="Copy to clipboard">📋</button>\n            <button class="icon-btn edit-btn" data-id="${t.id}" title="Edit prompt">✏️</button>\n            <button class="icon-btn delete-btn" data-id="${t.id}" title="Delete prompt">🗑️</button>\n          </div>\n        `,e.appendChild(o)})),this.addPromptActionListeners()):e.innerHTML='<p class="empty-state">Your saved prompts will appear here</p>')}updateCategoryFilter(t){const e=document.getElementById("prompt-category-filter");e&&(e.innerHTML='<option value="">All Categories</option>',t.forEach((t=>{const o=document.createElement("option");o.value=t,o.textContent=t,e.appendChild(o)})))}addPromptActionListeners(){document.querySelectorAll(".copy-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.copyPrompt(e)}))})),document.querySelectorAll(".edit-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.editPrompt(e)}))})),document.querySelectorAll(".delete-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.deletePrompt(e)}))}))}async openPromptEditor(e=null){const o=document.getElementById("prompt-editor-modal");if(o&&(o.classList.add("active"),this.currentPromptId=e,document.getElementById("prompt-title").value="",document.getElementById("prompt-content").value="",document.getElementById("prompt-category").value="General",document.getElementById("prompt-tags").value="",document.getElementById("prompt-is-template").checked=!1,document.getElementById("prompt-variables").value="",document.querySelector(".template-variables").style.display="none",e))try{const o=await t.getPromptById(e);o&&(document.getElementById("prompt-title").value=o.title,document.getElementById("prompt-content").value=o.content,document.getElementById("prompt-category").value=o.category,document.getElementById("prompt-tags").value=o.tags.join(", "),document.getElementById("prompt-is-template").checked=o.isTemplate,o.isTemplate&&(document.getElementById("prompt-variables").value=o.templateVariables.join(", "),document.querySelector(".template-variables").style.display="block"))}catch(t){console.error("Error loading prompt data:",t),this.showNotification("Failed to load prompt data",!0)}}closePromptEditor(){const t=document.getElementById("prompt-editor-modal");t&&t.classList.remove("active"),this.currentPromptId=null}async savePrompt(){try{const e=document.getElementById("prompt-title").value.trim(),o=document.getElementById("prompt-content").value.trim(),r=document.getElementById("prompt-category").value,a=document.getElementById("prompt-tags").value.trim(),i=document.getElementById("prompt-is-template").checked,n=document.getElementById("prompt-variables").value.trim();if(!e||!o)return void this.showNotification("Title and content are required",!0);const s={title:e,content:o,category:r,tags:a?a.split(",").map((t=>t.trim())):[],isTemplate:i,templateVariables:i&&n?n.split(",").map((t=>t.trim())):[]};this.currentPromptId?(await t.updatePrompt(this.currentPromptId,s),this.showNotification("Prompt updated successfully")):(await t.createPrompt(s),this.showNotification("Prompt created successfully")),this.closePromptEditor(),await this.loadPrompts(),await this.loadCategories()}catch(t){console.error("Error saving prompt:",t),this.showNotification("Failed to save prompt",!0)}}async copyPrompt(e){try{const o=await t.getPromptById(e);o&&(o.isTemplate&&o.templateVariables.length>0?this.openTemplateVariablePrompt(o):(await navigator.clipboard.writeText(o.content),this.showNotification("Prompt copied to clipboard")))}catch(t){console.error("Error copying prompt:",t),this.showNotification("Failed to copy prompt",!0)}}openTemplateVariablePrompt(t){navigator.clipboard.writeText(t.content).then((()=>{this.showNotification("Template copied to clipboard (with variables)")})).catch((t=>{console.error("Error copying template:",t),this.showNotification("Failed to copy template",!0)}))}editPrompt(t){this.openPromptEditor(t)}async deletePrompt(e){try{confirm("Are you sure you want to delete this prompt?")&&(await t.deletePrompt(e),this.showNotification("Prompt deleted"),await this.loadPrompts())}catch(t){console.error("Error deleting prompt:",t),this.showNotification("Failed to delete prompt",!0)}}async filterPrompts(){try{const e=document.getElementById("prompt-search"),o=document.getElementById("prompt-category-filter");if(!e||!o)return;const r=e.value.trim(),a=o.value,i={};a&&(i.category=a);const n=await t.searchPrompts(r,i);this.updatePromptList(n)}catch(t){console.error("Error filtering prompts:",t),this.showNotification("Failed to filter prompts",!0)}}importPrompts(){const e=document.createElement("input");e.type="file",e.accept=".json",e.addEventListener("change",(async e=>{try{const o=e.target.files[0];if(o){const e=new FileReader;e.onload=async e=>{try{const o=await t.importPrompts(e.target.result);this.showNotification(`Imported ${o.length} prompts`),await this.loadPrompts(),await this.loadCategories()}catch(t){console.error("Error parsing import file:",t),this.showNotification("Failed to import prompts: Invalid format",!0)}},e.readAsText(o)}}catch(t){console.error("Error importing prompts:",t),this.showNotification("Failed to import prompts",!0)}})),e.click()}async exportPrompts(){try{if((await t.getAllPrompts()).length>0){const e=await t.exportPrompts(),o=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(o),a=document.createElement("a");a.href=r,a.download=`navis_prompts_${(new Date).toISOString().split("T")[0]}.json`,a.click(),URL.revokeObjectURL(r),this.showNotification("Prompts exported successfully")}else this.showNotification("No prompts to export",!0)}catch(t){console.error("Error exporting prompts:",t),this.showNotification("Failed to export prompts",!0)}}showNotification(t,e=!1){const o=document.createElement("div");o.className="notification "+(e?"error":"success"),o.textContent=t,o.style.position="fixed",o.style.bottom="20px",o.style.right="20px",o.style.padding="10px 20px",o.style.borderRadius="4px",o.style.color="white",o.style.zIndex="1000",o.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",o.style.backgroundColor=e?"var(--color-error, #e53e3e)":"var(--color-success, #2cb67d)",document.body.appendChild(o),setTimeout((()=>{o.style.opacity="0",o.style.transition="opacity 0.5s ease",setTimeout((()=>{o.remove()}),500)}),3e3)}escapeHtml(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}},o=new class{constructor(){this.initialized=!1,this.readabilityLoaded=!1}async init(){if(!this.initialized)try{this.readabilityLoaded||await this.loadReadabilityLibrary(),this.initialized=!0}catch(t){throw console.error("Error initializing ContentExtractor:",t),t}}async loadReadabilityLibrary(){this.readabilityLoaded=!0}extractContent(t,e={}){const o=e.mode||"full",r=e.format||"markdown",a=!1!==e.autoCleanup,i=!1!==e.includeMetadata;let n="",s=t.title,c={};switch(o){case"full":const e=this.extractFullPageContent(t,a);n=e.content,c=e.metadata;break;case"selection":const o=window.getSelection();if(!o||!o.toString().trim())throw new Error("No text selected");n=o.toString();break;case"custom":n=t.body.innerText}if(i){c={...c,title:s,url:t.location.href,domain:t.location.hostname,extractedAt:(new Date).toISOString()};const e=this.extractAuthor(t);e&&(c.author=e);const o=this.extractPublishDate(t);o&&(c.publishDate=o)}return{content:this.formatContent(n,r,c),metadata:c,format:r,mode:o}}extractFullPageContent(t,e=!0){const o=t.cloneNode(!0);e&&this.cleanupDocument(o);const r=o.querySelector("main")||o.querySelector("article")||o.querySelector(".content")||o.querySelector("#content");let a="";a=r?r.innerText:o.body.innerText;const i=this.countWords(a);return{content:a,metadata:{wordCount:i,readingTime:Math.ceil(i/200)}}}cleanupDocument(t){["header","footer","nav","aside",".ads",".advertisement",".sidebar",".comments",".related",".recommended","script","style","noscript","iframe"].forEach((e=>{t.querySelectorAll(e).forEach((t=>{t.parentNode&&t.parentNode.removeChild(t)}))}))}extractAuthor(t){const e=t.querySelector('meta[name="author"]')||t.querySelector('meta[property="article:author"]')||t.querySelector('meta[property="og:author"]');if(e)return e.getAttribute("content");const o=t.querySelector(".author")||t.querySelector(".byline")||t.querySelector('[rel="author"]');return o?o.textContent.trim():null}extractPublishDate(t){const e=t.querySelector('meta[name="date"]')||t.querySelector('meta[property="article:published_time"]')||t.querySelector('meta[property="og:published_time"]');if(e)return e.getAttribute("content");const o=t.querySelector(".date")||t.querySelector(".published")||t.querySelector("time");return o?o.textContent.trim():null}formatContent(t,e,o={}){switch(e){case"markdown":return this.convertToMarkdown(t,o);case"json":return this.convertToJson(t,o);default:return t}}convertToMarkdown(t,e={}){let o="";return e.title&&(o+=`# ${e.title}\n\n`),Object.keys(e).length>0&&(o+="> ",e.author&&(o+=`Author: ${e.author} | `),e.publishDate&&(o+=`Published: ${e.publishDate} | `),e.url&&(o+=`Source: ${e.url} | `),e.extractedAt&&(o+=`Extracted: ${new Date(e.extractedAt).toLocaleString()} | `),e.readingTime&&(o+=`Reading time: ${e.readingTime} min | `),o=o.replace(/ \| $/,""),o+="\n\n"),o+=t,o}convertToJson(t,e={}){const o={content:t,...e};return JSON.stringify(o,null,2)}countWords(t){return t.trim().split(/\s+/).length}async saveExtraction(t){try{const e={id:this.generateUUID(),title:t.metadata.title||"Untitled Extraction",content:t.content,format:t.format,sourceUrl:t.metadata.url,sourceDomain:t.metadata.domain,extractionMode:t.mode,metadata:{...t.metadata,extractedAt:Date.now()},tags:[],folderId:null},o=(await chrome.storage.local.get("extractions")).extractions||[];return o.unshift(e),await chrome.storage.local.set({extractions:o}),e}catch(t){throw console.error("Error saving extraction:",t),t}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}},r=new class{constructor(){this.initialized=!1,this.currentExtraction=null,this.isExtracting=!1}async init(){if(!this.initialized)try{await o.init(),this.setupEventListeners(),this.setupMessageListeners(),this.initialized=!0,console.log("Content Extractor Module initialized")}catch(t){console.error("Error initializing Content Extractor Module:",t)}}setupEventListeners(){const t=document.getElementById("extract-content");t&&t.addEventListener("click",(()=>this.extractCurrentPage()));const e=document.getElementById("extract-current");e&&e.addEventListener("click",(()=>this.extractCurrentPage()));const o=document.querySelectorAll(".mode-btn");o.forEach((t=>{t.addEventListener("click",(()=>{o.forEach((t=>t.classList.remove("active"))),t.classList.add("active"),this.saveExtractionSettings()}))}));const r=document.querySelectorAll(".format-btn");r.forEach((t=>{t.addEventListener("click",(()=>{r.forEach((t=>t.classList.remove("active"))),t.classList.add("active"),this.saveExtractionSettings()}))}));const a=document.getElementById("auto-cleanup");a&&a.addEventListener("change",(()=>this.saveExtractionSettings()));const i=document.getElementById("include-metadata");i&&i.addEventListener("change",(()=>this.saveExtractionSettings()))}setupMessageListeners(){chrome.runtime.onMessage.addListener(((t,e,o)=>"extractionComplete"===t.action?(this.handleExtractionComplete(t.extraction,o),!0):"extractionError"===t.action?(this.handleExtractionError(t.error,o),!0):void 0))}extractCurrentPage(){if(this.isExtracting)return void this.showNotification("Extraction already in progress",!0);this.isExtracting=!0;const t=this.getExtractionSettings();chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]?chrome.tabs.sendMessage(e[0].id,{action:"extractContent",settings:t},(t=>{chrome.runtime.lastError?(console.error("Error sending message to content script:",chrome.runtime.lastError),this.showNotification("Error communicating with page",!0),this.isExtracting=!1):t&&t.success?this.showNotification("Extraction in progress"):(this.showNotification("Failed to start extraction",!0),this.isExtracting=!1)})):(this.showNotification("No active tab found",!0),this.isExtracting=!1)}))}getExtractionSettings(){const t=document.querySelector(".mode-btn.active"),e=t?t.getAttribute("data-mode"):"full",o=document.querySelector(".format-btn.active"),r=o?o.getAttribute("data-format"):"markdown",a=document.getElementById("auto-cleanup"),i=document.getElementById("include-metadata");return{mode:e,format:r,autoCleanup:!a||a.checked,includeMetadata:!i||i.checked}}async saveExtractionSettings(){try{const t=this.getExtractionSettings(),e=(await chrome.storage.local.get("settings")).settings||{};e.extraction={defaultMode:t.mode,defaultFormat:t.format,autoCleanup:t.autoCleanup,includeMetadata:t.includeMetadata},await chrome.storage.local.set({settings:e}),this.showNotification("Extraction settings saved")}catch(t){console.error("Error saving extraction settings:",t),this.showNotification("Failed to save settings",!0)}}async handleExtractionComplete(t,e){try{this.currentExtraction=t;const r=await o.saveExtraction(t);this.isExtracting=!1,this.showNotification("Content extracted and saved"),e({success:!0,extraction:r})}catch(t){console.error("Error handling extraction:",t),this.isExtracting=!1,this.showNotification("Failed to save extraction",!0),e({success:!1,error:t.message})}}handleExtractionError(t,e){console.error("Extraction error:",t),this.isExtracting=!1,this.showNotification(`Extraction failed: ${t}`,!0),e({success:!1})}showNotification(t,e=!1){const o=document.createElement("div");o.className="notification "+(e?"error":"success"),o.textContent=t,o.style.position="fixed",o.style.bottom="20px",o.style.right="20px",o.style.padding="10px 20px",o.style.borderRadius="4px",o.style.color="white",o.style.zIndex="1000",o.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",o.style.backgroundColor=e?"var(--color-error, #e53e3e)":"var(--color-success, #2cb67d)",document.body.appendChild(o),setTimeout((()=>{o.style.opacity="0",o.style.transition="opacity 0.5s ease",setTimeout((()=>{o.remove()}),500)}),3e3)}},a=new class{constructor(){this.initialized=!1}async init(){if(!this.initialized)try{const t=await chrome.storage.local.get(["extractions","folders"]);t.extractions||await chrome.storage.local.set({extractions:[]}),t.folders||await chrome.storage.local.set({folders:[{id:this.generateUUID(),name:"Default",type:"extraction",parentId:null,createdAt:Date.now()}]}),this.initialized=!0}catch(t){throw console.error("Error initializing HistoryManager:",t),t}}async getAllExtractions(){await this.init();try{return(await chrome.storage.local.get("extractions")).extractions||[]}catch(t){throw console.error("Error getting extractions:",t),t}}async getExtractionById(t){await this.init();try{return(await this.getAllExtractions()).find((e=>e.id===t))||null}catch(t){throw console.error("Error getting extraction by ID:",t),t}}async getExtractionsByFolder(t){await this.init();try{return(await this.getAllExtractions()).filter((e=>e.folderId===t))}catch(t){throw console.error("Error getting extractions by folder:",t),t}}async updateExtraction(t,e){await this.init();try{const o=await this.getAllExtractions(),r=o.findIndex((e=>e.id===t));return-1===r?null:(o[r]={...o[r],...e},await chrome.storage.local.set({extractions:o}),o[r])}catch(t){throw console.error("Error updating extraction:",t),t}}async deleteExtraction(t){await this.init();try{const e=await this.getAllExtractions(),o=e.filter((e=>e.id!==t));return o.length!==e.length&&(await chrome.storage.local.set({extractions:o}),!0)}catch(t){throw console.error("Error deleting extraction:",t),t}}async deleteMultipleExtractions(t){await this.init();try{const e=await this.getAllExtractions(),o=e.filter((e=>!t.includes(e.id))),r=e.length-o.length;return await chrome.storage.local.set({extractions:o}),r}catch(t){throw console.error("Error deleting multiple extractions:",t),t}}async searchExtractions(t,e={}){await this.init();try{const o=await this.getAllExtractions(),r=t.toLowerCase();return o.filter((t=>{const o=""===r||t.title.toLowerCase().includes(r)||t.content.toLowerCase().includes(r)||t.sourceDomain.toLowerCase().includes(r)||t.tags.some((t=>t.toLowerCase().includes(r))),a=!e.format||t.format===e.format,i=!e.folderId||t.folderId===e.folderId;let n=!0;return e.startDate&&(n=n&&t.metadata.extractedAt>=e.startDate),e.endDate&&(n=n&&t.metadata.extractedAt<=e.endDate),o&&a&&i&&n}))}catch(t){throw console.error("Error searching extractions:",t),t}}async getAllFolders(){await this.init();try{return(await chrome.storage.local.get("folders")).folders||[]}catch(t){throw console.error("Error getting folders:",t),t}}async createFolder(t){await this.init();try{if(!t.name)throw new Error("Folder name is required");const e=await this.getAllFolders(),o={id:this.generateUUID(),name:t.name,type:t.type||"extraction",parentId:t.parentId||null,createdAt:Date.now()};return e.push(o),await chrome.storage.local.set({folders:e}),o}catch(t){throw console.error("Error creating folder:",t),t}}async updateFolder(t,e){await this.init();try{const o=await this.getAllFolders(),r=o.findIndex((e=>e.id===t));return-1===r?null:(o[r]={...o[r],...e},await chrome.storage.local.set({folders:o}),o[r])}catch(t){throw console.error("Error updating folder:",t),t}}async deleteFolder(t,e=!0){await this.init();try{const o=await this.getAllFolders(),r=o.findIndex((e=>e.id===t));if(-1===r)return!1;const a=o[r].parentId,i=o.filter((e=>e.id!==t));if(e){const e=(await this.getAllExtractions()).map((e=>e.folderId===t?{...e,folderId:a}:e));await chrome.storage.local.set({extractions:e})}return await chrome.storage.local.set({folders:i}),!0}catch(t){throw console.error("Error deleting folder:",t),t}}async moveExtractionsToFolder(t,e){await this.init();try{if(null!==e){if(!(await this.getAllFolders()).some((t=>t.id===e)))throw new Error("Destination folder not found")}const o=await this.getAllExtractions();let r=0;const a=o.map((o=>t.includes(o.id)?(r++,{...o,folderId:e}):o));return await chrome.storage.local.set({extractions:a}),r}catch(t){throw console.error("Error moving extractions to folder:",t),t}}async addTagsToExtractions(t,e){await this.init();try{const o=await this.getAllExtractions();let r=0;const a=o.map((o=>{if(t.includes(o.id)){const t=new Set([...o.tags,...e]);return r++,{...o,tags:Array.from(t)}}return o}));return await chrome.storage.local.set({extractions:a}),r}catch(t){throw console.error("Error adding tags to extractions:",t),t}}async removeTagsFromExtractions(t,e){await this.init();try{const o=await this.getAllExtractions();let r=0;const a=o.map((o=>{if(t.includes(o.id)){const t=o.tags.filter((t=>!e.includes(t)));return t.length!==o.tags.length&&r++,{...o,tags:t}}return o}));return await chrome.storage.local.set({extractions:a}),r}catch(t){throw console.error("Error removing tags from extractions:",t),t}}async getAllTags(){await this.init();try{const t=await this.getAllExtractions(),e=new Set;return t.forEach((t=>{t.tags.forEach((t=>e.add(t)))})),Array.from(e)}catch(t){throw console.error("Error getting all tags:",t),t}}async exportExtractions(t=[]){await this.init();try{let e=await this.getAllExtractions();return t.length>0&&(e=e.filter((e=>t.includes(e.id)))),JSON.stringify(e,null,2)}catch(t){throw console.error("Error exporting extractions:",t),t}}async exportExtractionsToMarkdown(t){await this.init();try{let e=await this.getAllExtractions();t.length>0&&(e=e.filter((e=>t.includes(e.id))));let o="";return e.forEach(((t,e)=>{e>0&&(o+="\n\n---\n\n"),o+=`# ${t.title}\n\n`,o+="> ",t.metadata.author&&(o+=`Author: ${t.metadata.author} | `),t.metadata.publishDate&&(o+=`Published: ${t.metadata.publishDate} | `),o+=`Source: ${t.sourceUrl} | `,o+=`Extracted: ${new Date(t.metadata.extractedAt).toLocaleString()}`,o+="\n\n","markdown"===t.format?o+=t.content:o+="```\n"+t.content+"\n```\n"})),o}catch(t){throw console.error("Error exporting extractions to markdown:",t),t}}async getStorageInfo(){try{const t=await chrome.storage.local.getBytesInUse(null),e=chrome.storage.local.QUOTA_BYTES;return{bytesInUse:t,quotaBytes:e,percentUsed:Math.round(t/e*100)}}catch(t){throw console.error("Error getting storage info:",t),t}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}},i=new class{constructor(){this.initialized=!1,this.selectedExtractions=new Set}async init(){if(!this.initialized)try{await a.init(),this.setupEventListeners(),await this.loadHistory(),await this.loadFolders(),await this.loadTags(),await this.updateStorageInfo(),this.initialized=!0,console.log("History Manager Module initialized")}catch(t){console.error("Error initializing History Manager Module:",t)}}setupEventListeners(){const t=document.getElementById("view-all-history");t&&t.addEventListener("click",(()=>{chrome.runtime.openOptionsPage()}));const e=document.getElementById("export-history");e&&e.addEventListener("click",(()=>this.exportHistory()));const o=document.getElementById("clear-history");o&&o.addEventListener("click",(()=>this.clearHistory()));const r=document.getElementById("history-search");r&&r.addEventListener("input",(()=>this.filterHistory()));const a=document.getElementById("history-format-filter");a&&a.addEventListener("change",(()=>this.filterHistory()));const i=document.getElementById("new-folder");i&&i.addEventListener("click",(()=>this.createNewFolder())),this.setupBulkActionButtons()}setupBulkActionButtons(){const t=document.getElementById("bulk-delete");t&&t.addEventListener("click",(()=>this.bulkDeleteExtractions()));const e=document.getElementById("bulk-export");e&&e.addEventListener("click",(()=>this.bulkExportExtractions()));const o=document.getElementById("bulk-move");o&&o.addEventListener("click",(()=>this.showMoveFolderDialog()));const r=document.getElementById("bulk-tag");r&&r.addEventListener("click",(()=>this.showTagDialog()))}async loadHistory(){try{const t=await a.getAllExtractions();this.updateHistoryGrid(t)}catch(t){console.error("Error loading history:",t),this.showNotification("Failed to load history",!0)}}async loadFolders(){try{const t=await a.getAllFolders();this.updateFolderList(t)}catch(t){console.error("Error loading folders:",t),this.showNotification("Failed to load folders",!0)}}async loadTags(){try{const t=await a.getAllTags();this.updateTagList(t)}catch(t){console.error("Error loading tags:",t),this.showNotification("Failed to load tags",!0)}}updateHistoryGrid(t){const e=document.querySelector(".history-grid");e&&(t.length>0?(e.innerHTML="",t.forEach((t=>{const o=document.createElement("div");o.className="history-item",o.dataset.id=t.id,this.selectedExtractions.has(t.id)&&o.classList.add("selected"),o.innerHTML=`\n          <div class="history-item-header">\n            <input type="checkbox" class="history-select-checkbox" ${this.selectedExtractions.has(t.id)?"checked":""}>\n            <h3>${this.escapeHtml(t.title)}</h3>\n          </div>\n          <p class="source">${this.escapeHtml(t.sourceDomain)}</p>\n          <p class="date">${new Date(t.metadata.extractedAt).toLocaleDateString()}</p>\n          <div class="history-tags">\n            ${t.tags.map((t=>`<span class="tag">${this.escapeHtml(t)}</span>`)).join("")}\n          </div>\n          <div class="history-actions">\n            <button class="icon-btn view-btn" data-id="${t.id}" title="View content">👁️</button>\n            <button class="icon-btn copy-btn" data-id="${t.id}" title="Copy to clipboard">📋</button>\n            <button class="icon-btn delete-btn" data-id="${t.id}" title="Delete extraction">🗑️</button>\n          </div>\n        `,e.appendChild(o)})),this.addHistoryActionListeners(),this.updateBulkActionButtons()):e.innerHTML='<p class="empty-state">Your extraction history will appear here</p>')}updateFolderList(t){const e=document.querySelector(".folder-list");if(!e)return;e.innerHTML="";const o=document.createElement("div");o.className="folder-item active",o.dataset.id="all",o.innerHTML='\n      <span class="folder-icon">📁</span>\n      <span class="folder-name">All Extractions</span>\n    ',e.appendChild(o),t.forEach((t=>{const o=document.createElement("div");o.className="folder-item",o.dataset.id=t.id,o.innerHTML=`\n        <span class="folder-icon">📁</span>\n        <span class="folder-name">${this.escapeHtml(t.name)}</span>\n        <div class="folder-actions">\n          <button class="icon-btn edit-folder-btn" data-id="${t.id}" title="Edit folder">✏️</button>\n          <button class="icon-btn delete-folder-btn" data-id="${t.id}" title="Delete folder">🗑️</button>\n        </div>\n      `,e.appendChild(o)})),this.addFolderActionListeners()}updateTagList(t){const e=document.querySelector(".tag-list");e&&(t.length>0?(e.innerHTML="",t.forEach((t=>{const o=document.createElement("div");o.className="tag-item",o.dataset.tag=t,o.innerHTML=`\n          <span class="tag">${this.escapeHtml(t)}</span>\n          <span class="tag-count">0</span>\n        `,e.appendChild(o)})),this.addTagFilterListeners(),this.updateTagCounts()):e.innerHTML='<p class="empty-state">No tags yet</p>')}addHistoryActionListeners(){document.querySelectorAll(".view-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.viewExtraction(e)}))})),document.querySelectorAll(".copy-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.copyExtraction(e)}))})),document.querySelectorAll(".delete-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.deleteExtraction(e)}))})),document.querySelectorAll(".history-select-checkbox").forEach((t=>{t.addEventListener("change",(t=>{const e=t.target.closest(".history-item"),o=e.dataset.id;t.target.checked?(this.selectedExtractions.add(o),e.classList.add("selected")):(this.selectedExtractions.delete(o),e.classList.remove("selected")),this.updateBulkActionButtons()}))})),document.querySelectorAll(".history-item").forEach((t=>{t.addEventListener("click",(e=>{if(e.target.closest("button")||e.target.closest('input[type="checkbox"]'))return;const o=t.dataset.id,r=t.querySelector(".history-select-checkbox");r.checked=!r.checked,r.checked?(this.selectedExtractions.add(o),t.classList.add("selected")):(this.selectedExtractions.delete(o),t.classList.remove("selected")),this.updateBulkActionButtons()}))}))}addFolderActionListeners(){document.querySelectorAll(".folder-item").forEach((t=>{t.addEventListener("click",(e=>{if(e.target.closest("button"))return;document.querySelectorAll(".folder-item").forEach((t=>{t.classList.remove("active")})),t.classList.add("active");const o=t.dataset.id;this.filterHistoryByFolder(o)}))})),document.querySelectorAll(".edit-folder-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.editFolder(e)}))})),document.querySelectorAll(".delete-folder-btn").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.getAttribute("data-id");this.deleteFolder(e)}))}))}addTagFilterListeners(){document.querySelectorAll(".tag-item").forEach((t=>{t.addEventListener("click",(()=>{t.dataset.tag,t.classList.toggle("active"),this.filterHistoryByTags()}))}))}updateBulkActionButtons(){const t=this.selectedExtractions.size>0;document.querySelectorAll(".bulk-action-btn").forEach((e=>{e.disabled=!t}));const e=document.querySelector(".selection-count");e&&(e.textContent=t?`${this.selectedExtractions.size} selected`:"")}async updateTagCounts(){try{const t=await a.getAllExtractions(),e={};t.forEach((t=>{t.tags.forEach((t=>{e[t]=(e[t]||0)+1}))})),document.querySelectorAll(".tag-item").forEach((t=>{const o=t.dataset.tag,r=t.querySelector(".tag-count");r&&(r.textContent=e[o]||0)}))}catch(t){console.error("Error updating tag counts:",t)}}async viewExtraction(t){try{const e=await a.getExtractionById(t);if(e){const t=new Blob([e.content],{type:"text/plain"}),o=URL.createObjectURL(t);chrome.tabs.create({url:o})}}catch(t){console.error("Error viewing extraction:",t),this.showNotification("Failed to view extraction",!0)}}async copyExtraction(t){try{const e=await a.getExtractionById(t);e&&(await navigator.clipboard.writeText(e.content),this.showNotification("Extraction copied to clipboard"))}catch(t){console.error("Error copying extraction:",t),this.showNotification("Failed to copy extraction",!0)}}async deleteExtraction(t){try{confirm("Are you sure you want to delete this extraction?")&&(await a.deleteExtraction(t),this.selectedExtractions.delete(t),await this.loadHistory(),await this.updateTagCounts(),await this.updateStorageInfo(),this.showNotification("Extraction deleted"))}catch(t){console.error("Error deleting extraction:",t),this.showNotification("Failed to delete extraction",!0)}}async filterHistory(){try{const t=document.getElementById("history-search"),e=document.getElementById("history-format-filter");if(!t||!e)return;const o=t.value.trim(),r=e.value,i={};r&&(i.format=r);const n=document.querySelector(".folder-item.active");n&&"all"!==n.dataset.id&&(i.folderId=n.dataset.id);const s=await a.searchExtractions(o,i);this.updateHistoryGrid(s)}catch(t){console.error("Error filtering history:",t),this.showNotification("Failed to filter history",!0)}}async filterHistoryByFolder(t){try{const e=document.getElementById("history-search");e&&(e.value="");const o=document.getElementById("history-format-filter");let r;o&&(o.value=""),r="all"===t?await a.getAllExtractions():await a.getExtractionsByFolder(t),this.updateHistoryGrid(r)}catch(t){console.error("Error filtering history by folder:",t),this.showNotification("Failed to filter history",!0)}}async filterHistoryByTags(){try{const t=[];if(document.querySelectorAll(".tag-item.active").forEach((e=>{t.push(e.dataset.tag)})),0===t.length)return void await this.filterHistory();const e=(await a.getAllExtractions()).filter((e=>t.every((t=>e.tags.includes(t)))));this.updateHistoryGrid(e)}catch(t){console.error("Error filtering history by tags:",t),this.showNotification("Failed to filter history",!0)}}async createNewFolder(){const t=prompt("Enter folder name:");if(t&&t.trim())try{await a.createFolder({name:t.trim(),type:"extraction"}),await this.loadFolders(),this.showNotification("Folder created")}catch(t){console.error("Error creating folder:",t),this.showNotification("Failed to create folder",!0)}}async editFolder(t){try{const e=(await a.getAllFolders()).find((e=>e.id===t));if(e){const o=prompt("Enter new folder name:",e.name);o&&o.trim()&&(await a.updateFolder(t,{name:o.trim()}),await this.loadFolders(),this.showNotification("Folder updated"))}}catch(t){console.error("Error editing folder:",t),this.showNotification("Failed to edit folder",!0)}}async deleteFolder(t){try{confirm("Are you sure you want to delete this folder? Extractions will be moved to the root level.")&&(await a.deleteFolder(t,!0),await this.loadFolders(),await this.loadHistory(),this.showNotification("Folder deleted"))}catch(t){console.error("Error deleting folder:",t),this.showNotification("Failed to delete folder",!0)}}async bulkDeleteExtractions(){try{if(0===this.selectedExtractions.size)return void this.showNotification("No extractions selected",!0);if(confirm(`Are you sure you want to delete ${this.selectedExtractions.size} selected extractions?`)){const t=Array.from(this.selectedExtractions),e=await a.deleteMultipleExtractions(t);this.selectedExtractions.clear(),await this.loadHistory(),await this.updateTagCounts(),await this.updateStorageInfo(),this.showNotification(`${e} extractions deleted`)}}catch(t){console.error("Error bulk deleting extractions:",t),this.showNotification("Failed to delete extractions",!0)}}async bulkExportExtractions(){try{if(0===this.selectedExtractions.size)return void this.showNotification("No extractions selected",!0);const t=Array.from(this.selectedExtractions),e=prompt("Export format (json or markdown):","markdown");if("json"===e){const e=await a.exportExtractions(t);this.downloadFile(e,"navis_extractions.json","application/json")}else{if("markdown"!==e)return void this.showNotification("Invalid export format",!0);{const e=await a.exportExtractionsToMarkdown(t);this.downloadFile(e,"navis_extractions.md","text/markdown")}}this.showNotification(`${t.length} extractions exported`)}catch(t){console.error("Error bulk exporting extractions:",t),this.showNotification("Failed to export extractions",!0)}}async showMoveFolderDialog(){try{if(0===this.selectedExtractions.size)return void this.showNotification("No extractions selected",!0);const t=await a.getAllFolders();let e='<option value="">Root (No Folder)</option>';t.forEach((t=>{e+=`<option value="${t.id}">${this.escapeHtml(t.name)}</option>`}));const o=prompt(`Select destination folder for ${this.selectedExtractions.size} extractions:\n\n${e}\n\nEnter folder ID or leave empty for root:`);if(null!==o){const e=o.trim()||null;if(null!==e&&!t.some((t=>t.id===e)))return void this.showNotification("Invalid folder ID",!0);const r=Array.from(this.selectedExtractions),i=await a.moveExtractionsToFolder(r,e);await this.loadHistory(),this.showNotification(`${i} extractions moved to ${e?"folder":"root"}`)}}catch(t){console.error("Error moving extractions to folder:",t),this.showNotification("Failed to move extractions",!0)}}async showTagDialog(){try{if(0===this.selectedExtractions.size)return void this.showNotification("No extractions selected",!0);const t=await a.getAllTags();let e="";t.length>0&&(e="Existing tags:\n"+t.join(", ")+"\n\n");const o=prompt(`${e}Enter tags for ${this.selectedExtractions.size} extractions (comma separated):`);if(null!==o){const t=o.split(",").map((t=>t.trim())).filter((t=>t));if(0===t.length)return void this.showNotification("No valid tags entered",!0);const e=Array.from(this.selectedExtractions),r=await a.addTagsToExtractions(e,t);await this.loadHistory(),await this.loadTags(),this.showNotification(`Tags added to ${r} extractions`)}}catch(t){console.error("Error adding tags to extractions:",t),this.showNotification("Failed to add tags",!0)}}async exportHistory(){try{if(0===(await a.getAllExtractions()).length)return void this.showNotification("No extractions to export",!0);const t=prompt("Export format (json or markdown):","json");if("json"===t){const t=await a.exportExtractions();this.downloadFile(t,"navis_all_extractions.json","application/json")}else{if("markdown"!==t)return void this.showNotification("Invalid export format",!0);{const t=await a.exportExtractionsToMarkdown([]);this.downloadFile(t,"navis_all_extractions.md","text/markdown")}}this.showNotification("All extractions exported")}catch(t){console.error("Error exporting history:",t),this.showNotification("Failed to export history",!0)}}async clearHistory(){try{confirm("Are you sure you want to clear all extraction history? This cannot be undone.")&&(await chrome.storage.local.set({extractions:[]}),this.selectedExtractions.clear(),await this.loadHistory(),await this.loadTags(),await this.updateStorageInfo(),this.showNotification("Extraction history cleared"))}catch(t){console.error("Error clearing history:",t),this.showNotification("Failed to clear history",!0)}}async updateStorageInfo(){try{const t=await a.getStorageInfo();document.querySelectorAll(".storage-used").forEach((e=>{e.style.width=`${t.percentUsed}%`})),document.querySelectorAll(".storage-text").forEach((e=>{e.textContent=`${t.percentUsed}% used`}))}catch(t){console.error("Error updating storage info:",t)}}downloadFile(t,e,o){const r=new Blob([t],{type:o}),a=URL.createObjectURL(r),i=document.createElement("a");i.href=a,i.download=e,i.click(),URL.revokeObjectURL(a)}showNotification(t,e=!1){const o=document.createElement("div");o.className="notification "+(e?"error":"success"),o.textContent=t,o.style.position="fixed",o.style.bottom="20px",o.style.right="20px",o.style.padding="10px 20px",o.style.borderRadius="4px",o.style.color="white",o.style.zIndex="1000",o.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",o.style.backgroundColor=e?"var(--color-error, #e53e3e)":"var(--color-success, #2cb67d)",document.body.appendChild(o),setTimeout((()=>{o.style.opacity="0",o.style.transition="opacity 0.5s ease",setTimeout((()=>{o.remove()}),500)}),3e3)}escapeHtml(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}},n=new class{constructor(){this.initialized=!1}async init(){if(!this.initialized)try{console.log("Initializing Navis AI Integration..."),await this.initializeModules(),this.setupGlobalEventListeners(),await this.applyThemeFromSettings(),this.initialized=!0,console.log("Navis AI Integration initialized successfully")}catch(t){console.error("Error initializing Navis AI Integration:",t)}}async initializeModules(){try{await Promise.all([e.init(),r.init(),i.init()]),console.log("All modules initialized successfully")}catch(t){throw console.error("Error initializing modules:",t),t}}setupGlobalEventListeners(){document.querySelectorAll(".theme-btn").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-theme");this.changeTheme(e)}))})),chrome.storage.onChanged.addListener(((t,e)=>{"local"===e&&this.handleStorageChanges(t)}))}async applyThemeFromSettings(){try{const t=await chrome.storage.local.get("settings");if(t.settings&&t.settings.theme){const e=t.settings.theme;this.applyTheme(e)}}catch(t){console.error("Error applying theme from settings:",t)}}async changeTheme(t){try{document.querySelectorAll(".theme-btn").forEach((e=>{e.classList.remove("active"),e.getAttribute("data-theme")===t&&e.classList.add("active")}));const e=(await chrome.storage.local.get("settings")).settings||{};e.theme=e.theme||{},e.theme.mode=t,await chrome.storage.local.set({settings:e}),this.applyTheme(e.theme),console.log(`Theme changed to ${t}`)}catch(t){console.error("Error changing theme:",t)}}applyTheme(t){t&&(t.accentColor&&document.documentElement.style.setProperty("--color-secondary",t.accentColor),"dark"===t.mode?document.documentElement.classList.add("dark-theme"):"light"===t.mode?document.documentElement.classList.remove("dark-theme"):"system"===t.mode&&(window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?document.documentElement.classList.add("dark-theme"):document.documentElement.classList.remove("dark-theme")))}handleStorageChanges(t){if(t.settings){const e=t.settings.newValue;e&&e.theme&&this.applyTheme(e.theme)}}},s=n;function c(t){document.querySelectorAll(".extraction-tutorial, .tutorial-step").forEach((e=>{e.style.display=t?"block":"none"}))}async function l(){try{const t=await chrome.storage.local.get(null),e=JSON.stringify(t,null,2),o=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(o),a=document.createElement("a");a.href=r,a.download=`navis_all_data_${(new Date).toISOString().split("T")[0]}.json`,a.click(),URL.revokeObjectURL(r),m("All data exported successfully")}catch(t){console.error("Error exporting all data:",t),m("Failed to export data",!0)}}function d(){const t=document.createElement("input");t.type="file",t.accept=".json",t.addEventListener("change",(async t=>{try{const e=t.target.files[0];if(e){const t=new FileReader;t.onload=async t=>{try{const e=JSON.parse(t.target.result);if(!e||"object"!=typeof e)throw new Error("Invalid import format");confirm("This will replace all your current data. Are you sure you want to continue?")&&(await chrome.storage.local.clear(),await chrome.storage.local.set(e),location.reload(),m("Data imported successfully"))}catch(t){console.error("Error parsing import file:",t),m("Failed to import data: Invalid format",!0)}},t.readAsText(e)}}catch(t){console.error("Error importing data:",t),m("Failed to import data",!0)}})),t.click()}async function h(){try{if(confirm("Are you sure you want to reset all data? This will delete all prompts, extractions, and settings. This cannot be undone.")){const t={theme:{mode:"light",accentColor:"#05b2dc"},interface:{defaultView:"prompts",sidebarCollapsed:!1,showTutorials:!0},extraction:{defaultFormat:"markdown",defaultMode:"full",autoCleanup:!0,includeMetadata:!0}};await chrome.storage.local.clear(),await chrome.storage.local.set({settings:t,prompts:[],extractions:[],folders:[]}),location.reload(),m("All data has been reset")}}catch(t){console.error("Error resetting data:",t),m("Failed to reset data",!0)}}function m(t,e=!1){const o=document.createElement("div");o.className="notification "+(e?"error":"success"),o.textContent=t,o.style.position="fixed",o.style.bottom="20px",o.style.right="20px",o.style.padding="10px 20px",o.style.borderRadius="4px",o.style.color="white",o.style.zIndex="1000",o.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",o.style.backgroundColor=e?"var(--color-error, #e53e3e)":"var(--color-success, #2cb67d)",document.body.appendChild(o),setTimeout((()=>{o.style.opacity="0",o.style.transition="opacity 0.5s ease",setTimeout((()=>{o.remove()}),500)}),3e3)}document.addEventListener("DOMContentLoaded",(()=>{n.init()})),document.addEventListener("DOMContentLoaded",(async function(){await s.init();const t=document.querySelectorAll(".navis-nav a"),e=document.querySelectorAll(".view");t.forEach((o=>{o.addEventListener("click",(r=>{r.preventDefault();const a=o.getAttribute("data-view");t.forEach((t=>t.classList.remove("active"))),o.classList.add("active"),e.forEach((t=>t.classList.remove("active"))),document.getElementById(`${a}-view`).classList.add("active")}))})),document.querySelectorAll(".theme-btn").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-theme");s.changeTheme(e)}))}));const o=document.getElementById("accent-color");o&&o.addEventListener("change",(async()=>{try{const t=(await chrome.storage.local.get("settings")).settings||{};t.theme=t.theme||{},t.theme.accentColor=o.value,await chrome.storage.local.set({settings:t}),document.documentElement.style.setProperty("--color-secondary",o.value),m("Accent color updated")}catch(t){console.error("Error updating accent color:",t),m("Failed to update accent color",!0)}}));const r=document.getElementById("default-view");r&&r.addEventListener("change",(async()=>{try{const t=(await chrome.storage.local.get("settings")).settings||{};t.interface=t.interface||{},t.interface.defaultView=r.value,await chrome.storage.local.set({settings:t}),m("Default view updated")}catch(t){console.error("Error updating default view:",t),m("Failed to update default view",!0)}}));const a=document.getElementById("show-tutorials");a&&a.addEventListener("change",(async()=>{try{const t=(await chrome.storage.local.get("settings")).settings||{};t.interface=t.interface||{},t.interface.showTutorials=a.checked,await chrome.storage.local.set({settings:t}),c(a.checked),m("Tutorial settings updated")}catch(t){console.error("Error updating tutorial settings:",t),m("Failed to update tutorial settings",!0)}}));const i=document.getElementById("export-all-data");i&&i.addEventListener("click",l);const n=document.getElementById("import-data");n&&n.addEventListener("click",d);const u=document.getElementById("reset-all");u&&u.addEventListener("click",h),async function(){try{const t=await chrome.storage.local.get("settings");if(t.settings){const e=t.settings;e.theme&&(document.querySelectorAll(".theme-btn").forEach((t=>{t.classList.remove("active"),t.getAttribute("data-theme")===e.theme.mode&&t.classList.add("active")})),e.theme.accentColor&&(document.getElementById("accent-color").value=e.theme.accentColor)),e.interface&&(e.interface.defaultView&&(document.getElementById("default-view").value=e.interface.defaultView),document.getElementById("show-tutorials").checked=!1!==e.interface.showTutorials,c(!1!==e.interface.showTutorials))}}catch(t){console.error("Error loading settings:",t),m("Failed to load settings",!0)}}(),async function(){try{const t=await chrome.storage.local.getBytesInUse(null),e=chrome.storage.local.QUOTA_BYTES,o=Math.round(t/e*100);document.querySelectorAll(".storage-used").forEach((t=>{t.style.width=`${o}%`})),document.querySelectorAll(".storage-text").forEach((t=>{t.textContent=`${o}% used`}))}catch(t){console.error("Error getting storage info:",t)}}()}))})();